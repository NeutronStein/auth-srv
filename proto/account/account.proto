syntax = "proto3";

package org.dakstudios.srv.auth.account;

service AccountService {
    rpc ReadUser(ReadUserRequest) returns (ReadUserResponse) {}
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
    rpc SearchUser(SearchUserRequest) returns (SearchUserResponse) {}
}

service RoleService {
    rpc ReadRole(ReadRoleRequest) returns (ReadRoleResponse) {}
    rpc ReadAllRoles(ReadAllRolesRequest) returns (ReadAllRolesResponse) {}
    rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {}
    rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {}
    rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {}
}

message User {
    // user uuid
    string id = 1;
    // user roles
    repeated Role roles = 2;
    
    string first_name = 3;
    string last_name = 4;
    string email = 5;

    // may be blank
    string password = 6;

    // unix timestamp
    int64 created = 7;
    // unix timestamp
    int64 updated = 8;
}

message Role {
    // role uuid
    string id = 1;
    // role name
    string name = 2;
    // role permissions
    repeated string permissions = 3;
}

message ReadUserRequest {
    string id = 1;
}

message ReadUserResponse {
    User account = 1;
}

message CreateUserRequest {
    // account id should be blank
    User account = 1;
}

message CreateUserResponse { 
    // returns nothing
}

message UpdateUserRequest {
    // account id cannot be changed
    User account = 1;
}

message UpdateUserResponse {
    // returns nothing
}

message DeleteUserRequest {
    string id = 1;
}

message DeleteUserResponse {
    // returns nothing
}

message SearchUserRequest {
    // supports pagination
    int64 limit = 1;
    int64 offset = 2;
}

message SearchUserResponse {
    repeated User accounts = 1;
}

message ReadRoleRequest {
    string id = 1;
}

message ReadRoleResponse {
    Role role = 1;
}

message ReadAllRolesRequest {
    // get nothing
}

message ReadAllRolesResponse {
    repeated Role roles = 1;
}

message CreateRoleRequest {
    Role role = 1;
}

message CreateRoleResponse {
    // returns nothing
}

message UpdateRoleRequest {
    Role role = 1;
}

message UpdateRoleResponse {
    // returns nothing
}

message DeleteRoleRequest {
    string id = 1;
}

message DeleteRoleResponse {
    // returns nothing
}

