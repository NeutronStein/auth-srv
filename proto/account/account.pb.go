// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account/account.proto

/*
Package org_dakstudios_srv_auth_account is a generated protocol buffer package.

It is generated from these files:
	proto/account/account.proto

It has these top-level messages:
	User
	Role
	Permission
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package org_dakstudios_srv_auth_account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	// user uuid
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// user roles
	Roles     []*Role `protobuf:"bytes,2,rep,name=roles" json:"roles,omitempty"`
	FirstName string  `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string  `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Email     string  `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	// unix timestamp
	Created int64 `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	// unix timestamp
	Updated int64 `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type Role struct {
	// role uuid
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// role name
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// role permissions
	Permissions []*Permission `protobuf:"bytes,3,rep,name=permissions" json:"permissions,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type Permission struct {
	// permission id
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Permission) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadResponse struct {
	Account *User `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetAccount() *User {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateRequest struct {
	// account id should be blank
	Account *User `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateRequest) GetAccount() *User {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type UpdateRequest struct {
	// account id cannot be changed
	Account *User `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetAccount() *User {
	if m != nil {
		return m.Account
	}
	return nil
}

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type SearchRequest struct {
	// supports pagination
	Limit  int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type SearchResponse struct {
	Accounts []*User `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchResponse) GetAccounts() []*User {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "org.dakstudios.srv.auth.account.User")
	proto.RegisterType((*Role)(nil), "org.dakstudios.srv.auth.account.Role")
	proto.RegisterType((*Permission)(nil), "org.dakstudios.srv.auth.account.Permission")
	proto.RegisterType((*ReadRequest)(nil), "org.dakstudios.srv.auth.account.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "org.dakstudios.srv.auth.account.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "org.dakstudios.srv.auth.account.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "org.dakstudios.srv.auth.account.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "org.dakstudios.srv.auth.account.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "org.dakstudios.srv.auth.account.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "org.dakstudios.srv.auth.account.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "org.dakstudios.srv.auth.account.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "org.dakstudios.srv.auth.account.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "org.dakstudios.srv.auth.account.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "org.dakstudios.srv.auth.account"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AccountHandler.Read(ctx, in, out)
}

func (h *Account) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AccountHandler.Create(ctx, in, out)
}

func (h *Account) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AccountHandler.Update(ctx, in, out)
}

func (h *Account) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.AccountHandler.Delete(ctx, in, out)
}

func (h *Account) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.AccountHandler.Search(ctx, in, out)
}

func init() { proto.RegisterFile("proto/account/account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x51, 0x6b, 0xdb, 0x30,
	0x10, 0xae, 0x63, 0x27, 0x69, 0x2e, 0x4b, 0x28, 0xa2, 0x0c, 0xd3, 0xae, 0x34, 0x18, 0x06, 0x81,
	0x6d, 0x2e, 0x74, 0x8f, 0x63, 0x8c, 0xb2, 0xbd, 0x6e, 0x2b, 0x2a, 0x7d, 0x1e, 0x5a, 0x7c, 0x59,
	0x45, 0xed, 0x28, 0x93, 0xec, 0xc1, 0xfe, 0xcf, 0xfe, 0xd4, 0xfe, 0xcd, 0xf0, 0x49, 0x6a, 0xea,
	0xe4, 0x21, 0x82, 0xf5, 0x29, 0x39, 0x7d, 0xf7, 0xdd, 0x77, 0xba, 0xfb, 0x64, 0x38, 0x5d, 0x6b,
	0x55, 0xab, 0x0b, 0xb1, 0x58, 0xa8, 0x66, 0x55, 0xfb, 0xdf, 0x9c, 0x4e, 0xd9, 0xb9, 0xd2, 0x3f,
	0xf2, 0x42, 0xdc, 0x9b, 0xba, 0x29, 0xa4, 0x32, 0xb9, 0xd1, 0xbf, 0x72, 0xd1, 0xd4, 0x77, 0xb9,
	0x4b, 0xcb, 0xfe, 0x46, 0x90, 0xdc, 0x1a, 0xd4, 0x6c, 0x0a, 0x3d, 0x59, 0xa4, 0xd1, 0x2c, 0x9a,
	0x8f, 0x78, 0x4f, 0x16, 0xec, 0x1d, 0xf4, 0xb5, 0x2a, 0xd1, 0xa4, 0xbd, 0x59, 0x3c, 0x1f, 0x5f,
	0xbe, 0xcc, 0xf7, 0x54, 0xca, 0xb9, 0x2a, 0x91, 0x5b, 0x0e, 0x3b, 0x03, 0x58, 0x4a, 0x6d, 0xea,
	0x6f, 0x2b, 0x51, 0x61, 0x1a, 0x53, 0xd1, 0x11, 0x9d, 0x7c, 0x11, 0x15, 0xb2, 0x53, 0x18, 0x95,
	0xc2, 0xa3, 0x09, 0xa1, 0x87, 0xed, 0x01, 0x81, 0xc7, 0xd0, 0xc7, 0x4a, 0xc8, 0x32, 0xed, 0x13,
	0x60, 0x03, 0x96, 0xc2, 0x70, 0xa1, 0x51, 0xd4, 0x58, 0xa4, 0x83, 0x59, 0x34, 0x8f, 0xb9, 0x0f,
	0x5b, 0xa4, 0x59, 0x17, 0x84, 0x0c, 0x2d, 0xe2, 0xc2, 0xec, 0x37, 0x24, 0x6d, 0x53, 0x3b, 0x57,
	0x63, 0x90, 0x90, 0x72, 0x8f, 0x4e, 0xe8, 0x3f, 0xfb, 0x0c, 0xe3, 0x35, 0xea, 0x4a, 0x1a, 0x23,
	0xd5, 0xca, 0xa4, 0x31, 0x5d, 0xfa, 0xd5, 0xde, 0x4b, 0x5f, 0x3f, 0x70, 0xf8, 0x63, 0x7e, 0xf6,
	0x02, 0x60, 0x03, 0x6d, 0x37, 0x90, 0x9d, 0xc1, 0x98, 0xa3, 0x28, 0x38, 0xfe, 0x6c, 0xd0, 0xd4,
	0x3b, 0xf0, 0x57, 0x78, 0x66, 0x61, 0xb3, 0x56, 0x2b, 0x83, 0xec, 0x03, 0x0c, 0x9d, 0x1e, 0x25,
	0x85, 0x2c, 0xa3, 0x5d, 0x29, 0xf7, 0xac, 0xec, 0x1a, 0x26, 0x1f, 0x69, 0x5a, 0x5e, 0xf1, 0xbf,
	0x2b, 0x1e, 0xc1, 0xd4, 0x57, 0xb4, 0x4d, 0xb6, 0x1a, 0xb7, 0x34, 0xf7, 0xa7, 0xd4, 0xf0, 0x15,
	0x9d, 0xc6, 0x39, 0x4c, 0x3e, 0x61, 0x89, 0x1b, 0x8d, 0xed, 0xc9, 0x1d, 0xc1, 0xd4, 0x27, 0x38,
	0xca, 0x7b, 0x98, 0xdc, 0xa0, 0xd0, 0x8b, 0x3b, 0x4f, 0x39, 0x86, 0x7e, 0x29, 0x2b, 0x69, 0x9b,
	0x8a, 0xb9, 0x0d, 0xd8, 0x73, 0x18, 0xa8, 0xe5, 0xd2, 0x60, 0x4d, 0xa6, 0x88, 0xb9, 0x8b, 0xb2,
	0x1b, 0x98, 0x7a, 0xba, 0x5b, 0xc6, 0x15, 0x1c, 0xba, 0x06, 0x4d, 0x1a, 0x05, 0x3e, 0x0d, 0xba,
	0xd7, 0x03, 0xed, 0xf2, 0x4f, 0x02, 0xc3, 0x2b, 0x1b, 0x30, 0x84, 0xa4, 0xdd, 0x35, 0x7b, 0xbd,
	0xff, 0x7d, 0x6d, 0x1c, 0x73, 0xf2, 0x26, 0x30, 0xdb, 0x0d, 0xe1, 0x80, 0xdd, 0xc3, 0xc0, 0xee,
	0x8b, 0xe5, 0x7b, 0xa9, 0x1d, 0xab, 0x9c, 0x5c, 0x04, 0xe7, 0x3f, 0x16, 0xb3, 0x8b, 0x0b, 0x10,
	0xeb, 0x78, 0x26, 0x40, 0x6c, 0xcb, 0x11, 0x24, 0x66, 0x57, 0x1e, 0x20, 0xd6, 0x31, 0x4f, 0x80,
	0xd8, 0x96, 0x97, 0x48, 0xcc, 0xda, 0x21, 0x40, 0xac, 0x63, 0xbb, 0x00, 0xb1, 0xae, 0xcf, 0xb2,
	0x83, 0xef, 0x03, 0xfa, 0x84, 0xbf, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0x86, 0x7e, 0x17, 0xbe,
	0xe1, 0x05, 0x00, 0x00,
}
